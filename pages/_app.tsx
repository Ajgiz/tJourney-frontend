import "../styles/globals.scss";
import type { AppProps } from "next/app";
import {
	CssBaseline,
	StyledEngineProvider,
	ThemeProvider,
} from "@mui/material";
import { theme } from "../theme";
import { Header } from "../components/header";
import "../styles/_mixin.scss";
import Head from "next/head";
import { wrapper } from "../redux/store";
import { parseCookies } from "nookies";
import { refresh } from "../redux/slices/user/user-create-async-action";

function App({ Component, pageProps }: AppProps) {
	return (
		<>
			<Head>
				<title>TJourney</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<ThemeProvider theme={theme}>
				<StyledEngineProvider injectFirst>
					<CssBaseline />
					<Header />
					<Component {...pageProps} />
				</StyledEngineProvider>
			</ThemeProvider>
		</>
	);
}
App.getInitialProps = wrapper.getInitialAppProps(
	(store) =>
		async ({ ctx, Component }) => {
			const { refreshToken } = parseCookies(ctx);
			try {
				await store.dispatch(refresh({ ctx, token: refreshToken })).unwrap();
			} catch (e: any) {
				if (ctx.asPath === "/write") {
					ctx.res?.writeHead(302, {
						Location: "/",
					});
					ctx.res?.end();
				}
			}

			return {
				pageProps: Component.getInitialProps
					? await Component.getInitialProps({ ...ctx, store })
					: {},
			};
		}
);

export default wrapper.withRedux(App);
